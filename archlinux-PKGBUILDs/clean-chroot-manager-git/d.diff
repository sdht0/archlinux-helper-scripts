diff --git a/common/clean-chroot-manager64.in b/common/clean-chroot-manager64.in
index d15dd4f..a8380d0 100644
--- a/common/clean-chroot-manager64.in
+++ b/common/clean-chroot-manager64.in
@@ -167,9 +167,9 @@ build() {
 	echo -e "${YELLOW}---->${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}"
 
 	if [[ -z "$RUNNAMCAP" ]]; then
-		makechrootpkg -c -u -r $CHROOTPATH64
+		makechrootpkg -l ccm -c -u -r $CHROOTPATH64
 	else
-		makechrootpkg -c -u -n -r $CHROOTPATH64
+		makechrootpkg -l ccm -c -u -n -r $CHROOTPATH64
 	fi
 
 	# stop here if build fails
@@ -180,11 +180,13 @@ buildnc() {
 	# try to build the package
 	local mesg="Attempting to build package..."
 	echo -e "${YELLOW}---->${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}"
+	
+	[[ -d $CHROOTPATH64/ccm/startdir ]] && rm -rf $CHROOTPATH64/ccm/startdir/* > /dev/null
 
 	if [[ -z "$RUNNAMCAP" ]]; then
-		makechrootpkg -u -r $CHROOTPATH64
+		makechrootpkg -l ccm -u -r $CHROOTPATH64
 	else
-		makechrootpkg -u -n -r $CHROOTPATH64
+		makechrootpkg -l ccm -u -n -r $CHROOTPATH64
 	fi
 
 	# stop here if build fails
@@ -195,29 +197,42 @@ indexit() {
 	# if this is the first time package has been successfully built
 	# then append the local repo to the chroot's pacman.conf
 	if [[ -z $(grep clean-chroot $CHROOTPATH64/root/etc/pacman.conf) ]]; then
-		# add a local repo to chroot
-		sed -i '/\[testing\]/i \
+		# add a local repo to chroot, both in root and working copy
+		for cuser in root ccm;do
+                    sed -i '/\[testing\]/i \
 # Added by clean-chroot-manager\n[chroot_local]\nSigLevel = Never\nServer = file:///repo\n' \
-			$CHROOTPATH64/root/etc/pacman.conf
+			$CHROOTPATH64/$cuser/etc/pacman.conf
+                done
 	fi
-
-	# setup a local repo and add adjust files in chroot
-	[[ ! -d $CHROOTPATH64/root/repo ]] && mkdir $CHROOTPATH64/root/repo
+	
+	WORKINGPATH=$CHROOTPATH64/ccm
+	
+	# source chroot PKGBUILD to get package details
+	. $WORKINGPATH/startdir/PKGBUILD
+	# save any changes in pkgver and pkgrel to user PKGBUILD
+	sed -i "s/^pkgver=.*/pkgver=$pkgver/" PKGBUILD
+	sed -i "s/^pkgrel=.*/pkgrel=$pkgrel/" PKGBUILD
+
+	# setup a local repo and add adjust files in chroot, both in root and working copy
+	[[ ! -d $CHROOTPATH64/root/repo ]] && mkdir $CHROOTPATH64/{root,ccm}/repo
 	local mesg="Adding package to chroot repo..."
 	echo -e "${YELLOW}---->${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}"
 
 	# it could be that the user is building for both i686 and x86_64
 	# in which case we don't want to pollute the pure x86_64 repo
 	# with i686 packages so only process 'x86_64' and 'any' types
+	pkgpath=$(pwd) && [[ -n "$PKGDEST" ]] && pkgpath=$PKGDEST
+	pushd $WORKINGPATH/startdir > /dev/null
 	for i in $(ls *.pkg.tar.xz | sed '/-i686.pkg.tar.xz/d'); do
-		cp "$i" $REPO
-		repo-add $REPO/chroot_local.db.tar.gz $REPO/"$i" || exit 1
+                cp "$pkgpath/$i" $REPO && repo-add $REPO/chroot_local.db.tar.gz $REPO/"$i" || exit 1
+		cp "$pkgpath/$i" $WORKINGPATH/repo && repo-add $WORKINGPATH/repo/chroot_local.db.tar.gz $WORKINGPATH/repo/"$i" > /dev/null || exit 1
 
 		# ensure that the chroot package matches the live pacman cache package
 		# which avoids checksum errors if the user builds the same $pkgname-$pkgver
 		# more than once
 		[[ -f "/var/cache/pacman/pkg/$i" ]] && rm -f "/var/cache/pacman/pkg/$i"
 	done
+	popd > /dev/null
 
 	# The rm statement above can return 1 if the file to remove is not found,
 	# causing the function to return a non-zero error code even if everything
